<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:task="http://www.springframework.org/schema/task"
	xmlns:websocket="http://www.springframework.org/schema/websocket"
	xsi:schemaLocation="http://www.springframework.org/schema/websocket http://www.springframework.org/schema/websocket/spring-websocket-4.3.xsd
		http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-4.3.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	<!-- 
		DispatcherServlet
		- HTTP를 이용해 전달받은 모든 요청을 프레젠테이션 계층 제일 앞에서 받아들여 처리하는 프론트 컨트롤러
		- 모든 요청/응답을 제어
		- Handler Mapping, View Resolver가 존재함
		
		Handler Mapping 
	 	- 요청 받은 주소를 매핑해 처리할 클래스 or 메소드를 지정하는 역할
	 	- XML 형식으로 작성 가능하나 @(Annotation) 형식으로 많이 사용함.
	 		-> @Controller, @RequestMapping 두 Annotation이 Handler Mapping을 대체함
	-->

	
	<!-- Enables the Spring MVC @Controller programming model -->
	<!-- 
		annotation-driven
		- @Controller로가 작성된 클래스에 요청을 전달하기 위해 Handler Mapping을 Bean을 등록함
			-> @RequestMapping, @ExceptionHandler 어노테이션을 사용할 수 있음.
		
		*** Bean : 스프링에서 생성하고 관리하는 객체
		Bean으로 등록함 == 스프링 컨테이너에 의해서 객체 생성
					 == 스프링이 생성했으니까 스프링이 제어할 수 있다. (IOC)
					 == 스프링이 해당 객체가 필요한 곳에 의존성 주입(DI)를 할 수 있다.
	-->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<!-- 
		View Resolver 
		- Controller에서 반환된 뷰 이름을 토대로 처리할 응답화면(jsp)을 지정하고 forward 하는 역할
	-->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	
	<!-- @Controller, @Service, @Repository, @Component가 작성된 클래스를 Bean 등록 -->
	<context:component-scan base-package="edu.kh.fin" />
	
	<!-- @Scheduled 어노테이션 인식하고 사용 가능하게 하는 태그 -->
	<task:annotation-driven/>
	
	<!-- 웹소켓 클래스 Bean 등록 -->
	<!-- 1. namespaces 탭에서 websocket을 체크 -->
	<!-- 2. Bean 생성 구문 작성 -->
	
	
	
	
</beans:beans>

<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="boardMapper">

	<!-- Board VO resultMap -->
	<resultMap type="Board" id="board_rm">
		<id 	property="boardNo" 		column="BOARD_NO"/>
		<result property="boardTitle" 	column="BOARD_TITLE" />
		<result property="boardContent" column="BOARD_CONTENT" />
		<result property="createDate" 	column="CREATE_DT" />
		<result property="modifyDate" 	column="MODIFY_DT" />
		<result property="readCount" 	column="READ_COUNT" />
		<result property="memberNo" 	column="MEMBER_NO" />
		<result property="statusCode" 	column="STATUS_CD" />
		<result property="categoryCode" column="CATEGORY_CD" />
		<result property="memberName" 	column="MEMBER_NM" />
		<result property="categoryName" column="CATEGORY_NM" />
		<result property="statusName" 	column="STATUS_NM" />
		
		<collection property="imgList" column="BOARD_NO"
					javaType="java.util.ArrayList" ofType="BoardImage" select="selectBoardImageList"/>
	</resultMap>
	
	<!-- 특정 게시글 이미지 목록 조회 -->
	<select id="selectBoardImageList" resultMap="boardImage_rm">
		SELECT * FROM BOARD_IMG
		WHERE BOARD_NO = #{boardNo}
		ORDER BY IMG_LEVEL
	</select>
	
	<resultMap type="BoardImage" id="boardImage_rm">
		<id 	property="imgNo" 		column="IMG_NO"/>
		<result property="imgPath" 		column="IMG_PATH"/>
		<result property="imgName" 		column="IMG_NM"/>
		<result property="imgOriginal" 	column="IMG_ORIGINAL"/>
		<result property="imgLevel" 	column="IMG_LEVEL"/>
		<result property="boardNo" 		column="BOARD_NO"/>
	</resultMap>
	<!-- BoardImage VO resultMap -->
	
	<resultMap type="Category" id="category_rm">
		<id 	property="categoryCode" column="CATEGORY_CD"/>
		<result property="categoryName" column="CATEGORY_NM"/>
	</resultMap>
	
	
	<!-- 전체 게시글 수 count -->
	<select id="getListCount" resultType="_int">
		SELECT COUNT(*) FROM BOARD WHERE STATUS_CD != 4
	</select>
	
	<!-- 게시글 목록 조회 -->
	<!-- <![CDATA[SQL문]]> : 내부에 작성된 태그 문자<,>를 일반 문자 자체로 인식 -->
	<select id="selectBoardList" resultMap="board_rm">
		<![CDATA[
		SELECT BOARD_NO, BOARD_TITLE, READ_COUNT,
		    CASE WHEN SYSDATE - CREATE_DT < 1
		        THEN TO_CHAR(CREATE_DT, 'HH:MI')
		        ELSE TO_CHAR(CREATE_DT, 'YYYY-MM-DD')
		    END "CREATE_DT",
		    MEMBER_NO, MEMBER_NM, STATUS_CD, STATUS_NM, CATEGORY_CD, CATEGORY_NM
		FROM BOARD B
		JOIN MEMBER USING(MEMBER_NO)
		JOIN STATUS S ON(S.STATUS_CD = B.STATUS_CD)
		JOIN CATEGORY USING(CATEGORY_CD)
		WHERE STATUS_CD != 4
		ORDER BY BOARD_NO DESC]]>
	</select>
	
	<select id="selectBoard" resultMap="board_rm">
		SELECT BOARD_NO, BOARD_TITLE, BOARD_CONTENT,
		    MEMBER_NO, MEMBER_NM,
		    TO_CHAR(CREATE_DT, 'YYYY"년" MM"월" DD"일" HH24"시" MI"분" SS"초"' ) CREATE_DT,
		    TO_CHAR(MODIFY_DT, 'YYYY"년" MM"월" DD"일" HH24"시" MI"분" SS"초"' ) MODIFY_DT,
		    CATEGORY_CD, CATEGORY_NM,
		    READ_COUNT, STATUS_NM
		FROM BOARD B
		JOIN MEMBER USING(MEMBER_NO)
		JOIN STATUS S ON(B.STATUS_CD = S.STATUS_CD)
		JOIN CATEGORY USING(CATEGORY_CD)
		WHERE BOARD_NO = #{boardNo}
		AND STATUS_CD != 4
	</select>
	
	<update id="increaseReadCount">
		UPDATE BOARD SET
		READ_COUNT = READ_COUNT + 1
		WHERE BOARD_NO = #{boardNo}
	</update>
	
	<!-- 카테고리 목록 조회 -->
	<select id="selectCategory" resultMap="category_rm">
		SELECT * FROM CATEGORY ORDER BY 1
	</select>
	
	<!-- 게시글 삽입 -->
	<!--  
		useGeneratedKeys : DB 내부적으로 생성한 키를 받는 JDBC getGeneratedKeys() 메소드를 사용하도록 설정(기본값 false)
		
		<selectKey> 태그 : insert, update 후 사용된 시퀀스 값을 반환하는 태그
						<insert>, <update> 태그 내부에만 작성 가능
		
		<selectKey> 속성
			keyProperty		: selectKey구문의 결과가 셋팅될 대상 프로퍼티.
			
	        keyColumn		: 리턴되는 결과셋의 칼럼명은 프로퍼티에 일치한다. 여러개의 칼럼을 사용한다면 칼럼명의 목록은 콤마를 사용해서 구분한다.
	        
	        resultType		: 결과의 타입. 마이바티스는 이 기능을 제거할 수 있지만 추가하는게 문제가 되지는 않을것이다. 
	        					마이바티스는 String을 포함하여 키로 사용될 수 있는 간단한 타입을 허용한다.
	        					
	        order			: BEFORE 또는 AFTER를 셋팅할 수 있다. BEFORE로 설정하면 키를 먼저 조회하고 그 값을 keyProperty 에 셋팅한 뒤 
			        			insert 구문을 실행한다. AFTER로 설정하면 insert 구문을 실행한 뒤 selectKey 구문을 실행한다. 
			        			오라클과 같은 데이터베이스에서는 insert구문 내부에서 일관된 호출형태로 처리한다.
			        			
	        statementType	: 위 내용과 같다. 마이바티스는 Statement, PreparedStatement 그리고 CallableStatement을 매핑하기 위해 
	        					STATEMENT, PREPARED 그리고 CALLABLE 구문타입을 지원한다.
	-->
	<insert id="insertBoard" useGeneratedKeys="true">
	
		<!-- 
			INSERT 구문이 수행되기 전에 <selectKey> 내부 SELECT를 수행해서 
			조회 결과인 int형 값을 파라미터로 전달 받은 Board 객체의 boardNo 필드에 세팅
		-->
		<selectKey order="BEFORE" resultType="_int" keyProperty="boardNo">
			SELECT SEQ_BOARD_NO.NEXTVAL FROM DUAL
		</selectKey>
		
		INSERT INTO BOARD (BOARD_NO, BOARD_TITLE, BOARD_CONTENT, MEMBER_NO, CATEGORY_CD)
		VALUES(#{boardNo}, #{boardTitle}, #{boardContent}, #{memberNo}, #{categoryCode})
	</insert>
	
	<!-- 게시글 이미지 목록 삽입 -->
	<!-- 파일 정보 List(imgList) 반복 삽입 -->
	<!-- 동적 SQL : 마이바티스의 핵심 기능으로 SQL 수행 중 조건, 반복, 특정 구문 추가 등을 동적으로 수행할 수 있음. -->
	<!-- 
		<forEach> 태그 
		- collection	: 반복 접근할 컬렉션 형태의 파라미터
		- item			: collection에서 반복 시 마다 순차적으로 하나씩 접근한 요소
		- index			: 현재 반복 인덱스
		- open			: forEach 시작 전 추가할 구문
		- close			: forEach 종료 후 추가할 구문
		- separator		: 반복 시 마다 SQL문 사이에 추가할 구분자
	-->
	<insert id="insertImgList" parameterType="list">
		INSERT INTO BOARD_IMG
		SELECT SEQ_IMG_NO.NEXTVAL, A.* FROM
		
		<foreach collection="list" item="img" open="(" close=") A" separator=" UNION ALL ">
			SELECT 	#{img.imgPath} IMG_PATH, 
					#{img.imgName} IMG_NM, 
					#{img.imgOriginal} IMG_ORIGINAL,
					#{img.imgLevel} IMG_LEVEL, 
					#{img.boardNo} BOARD_NO 
			FROM DUAL
		</foreach>
		
	</insert>
	
	<update id="updateBoard">
		UPDATE BOARD SET 
		BOARD_TITLE = #{boardTitle}, 
		BOARD_CONTENT = #{boardContent},
		CATEGORY_CD = #{categoryCode},
		MODIFY_DT = SYSDATE
		WHERE BOARD_NO = #{boardNo}
	</update>
	
	<!-- 기존에 있었지만 삭제된 이미지 DELETE -->
	<!-- 파라미터 타입이 Map인 경우 #{Key}를 작성하면 Value가 출력됨 -->
	<delete id="deleteImages">
		DELETE FROM BOARD_IMG
		WHERE BOARD_NO = #{boardNo} 
		AND IMG_LEVEL IN(${deleteImages})
	</delete>
	
	<!-- 이미지 수정 -->
	<update id="updateBoardImage">
		UPDATE BOARD_IMG SET
		IMG_PATH = #{imgPath},
		IMG_NM = #{imgName},
		IMG_ORIGINAL = #{imgOriginal}
		WHERE BOARD_NO = #{boardNo} AND IMG_LEVEL = #{imgLevel}
	</update>
	
	<!-- 이미지 삽입 -->
	<insert id="insertBoardImage">
		INSERT INTO BOARD_IMG VALUES
		(SEQ_IMG_NO.NEXTVAL, #{imgPath}, #{imgName}, #{imgOriginal}, #{imgLevel}, #{boardNo})
	</insert>
	
	<!-- 게시글 삭제 -->
	<update id="deleteBoard">
		UPDATE BOARD SET
		STATUS_CD = 4
		WHERE BOARD_NO = ${boardNo}
	</update>
	
	<!-- 검색 조건에 맞는 전체 게시글 수 couNT -->
	<!-- 마이바티스 동적 SQL 중 <if> 또는 <choose> 사용 + <bind> -->
	<select id="getSearchListCount" resultType="_int">
		SELECT COUNT(*) FROM BOARD
		JOIN MEMBER USING(MEMBER_NO)
			WHERE BOARD.STATUS_CD != 4 AND
			<choose>
				<when test="sk == 'title'">
					BOARD_TITLE LIKE '%' || #{sv} || '%'
				</when>
				<when test="sk == 'content'">
					BOARD_TITLE LIKE '%' || #{sk} || '%'
				</when>
				<otherwise>
				</otherwise>
			</choose>
	</select>
	
	
	
	
</mapper>

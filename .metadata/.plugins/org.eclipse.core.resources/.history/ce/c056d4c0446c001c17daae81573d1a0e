package edu.kh.fin.member.controller;

import javax.servlet.http.HttpServletRequest;

import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;

// Controller : 요청에 따라 알맞은 서비스를 호출하고 결과에 따라 알맞은 응답을 제어하는 역할

// @RequestMapping : 요청 주소, 전달 방식에 따라 연결되는 클래스 또는 메소드를 지정하는 어노테이션
//					-> 클래스 + 메소드에 동시 작성하여 하나의 주소로 해석할 수 있음.

/* @RequestMapping 규칭
 * 1. () 안에 작성되는 매개변수가 1개인 경우 
 * 	--> 매핑할 요청 주소로 해석(== value)
 * 
 * 2. () 안에 작성되는 매개변수가 2개 이상인 경우 
 * 	--> 각 값을 해석하기 위해 value = , method = 과 같은 key를 작성한다.
 * 
 * 3. method 키 미작성 시 get/post 관계없이 모두 처리한다.
*/

@Controller // 프레젠테이션 레이어, 웹앱에 전달된 요청과 응답을 처리하는 역할임을 명시 + Bean 등록

@RequestMapping("/member/*") // /fin/member/ 로 시작하는 모든 요청을 받아서 처리하는 컨트롤러
public class MemberController {
	
	// 1. HttpServletRequest를 이용한 파리마트 전달 받기
	// @RequestMapping("login") 
	// @RequestMapping(value = "login", method = RequestMethod.POST) // /fin/member/login 요청을 처리하는 메소드
	public String login(HttpServletRequest req) {
		// -> 컨트롤러 메소드에 원하는 객체의 타입을 매개변수로 작성하면 
		// 요청, 응답 관련 객체를 얻어오거나 새로운 객체를 생성해서 의존성 주입(DI) 해줌
		
		System.out.println(req.getParameter("memberId"));
		System.out.println(req.getParameter("memberPw"));
		
		// 로그인은 JSP를 이용한 응답 페이지를 만드는 forward 보다 
		// 이미 만들어진 요청-응답 처리 메소드를 재요청하는 redirect를 사용하는 것이 맞다
		
		return "redirect:/"; // 최상위주소(/fin/)로 재요청
	}
	
	// (주위) 요청 매핑 주소 중복되지 않게 주의하자!
	
	// 2. @RequestParam 어노테이션을 이용한 파라미터 전달 받기
	// - 메소드 매개변수 앞에 작성
	// --> @RequestParam 뒤쪽에 작성된 매개변수에 파라미터가 저장됨
	
	// @RequestParam 속성
	// value = 전달 받을 input 태그의 name 속성 값 (매개변수 1개일 때 기본 값)
	// requierd = 파라미터가 필수로 전달되어야 하는 지 여부(기본값 : true == 필수)
	// -> requierd=true 일 때 파라미터가 없으면 : 400 Bad Request(잘못된 요청)
	
	
	@RequestMapping(value = "login", method = RequestMethod.POST) // /fin/member/login 요청을 처리하는 메소드
	public String login2(@RequestParam("memberId") String id, @RequestParam("memberPw") String pw, @RequestParam("test") String t) {
		
		System.out.println(id);
		System.out.println(pw);
		System.out.println(t);
		
		return "redirect:/";
	}
	
}
